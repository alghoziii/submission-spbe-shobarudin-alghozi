generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  address   String
  phone     String
  cart      Cart?    @relation("CustomerToCart")
  invoices  Invoice[] @relation("CustomerToInvoice")
  createdAt DateTime @default(now())
}

model Author {
  id        Int      @id @default(autoincrement())
  name      String
  bio       String?
  birthdate DateTime?
  books     Book[]
}

model Book {
  id               Int          @id @default(autoincrement())
  title            String
  isbn             String       @unique
  publication_year Int
  genre            String
  author           Author       @relation(fields: [authorId], references: [id])
  authorId         Int
  products         BooksProduct[]
}

model BooksProduct {
  id          Int         @id @default(autoincrement())
  book        Book        @relation(fields: [bookId], references: [id])
  bookId      Int
  format      String
  price       Float
  stock       Int
  warehouse   Warehouse   @relation(fields: [warehouseId], references: [id])
  warehouseId Int
  cartItems   CartItem[]
  invoiceItems InvoiceItem[]
}

model Warehouse {
  id        Int           @id @default(autoincrement())
  name      String
  location  String
  capacity  Int
  products  BooksProduct[]
}

model Cart {
  id          Int       @id @default(autoincrement())
  customer    Customer  @relation("CustomerToCart", fields: [customerId], references: [id])
  customerId  Int       @unique
  items       CartItem[]
  invoices    Invoice[]
  createdAt   DateTime  @default(now())
}

model CartItem {
  id            Int         @id @default(autoincrement())
  cart          Cart        @relation(fields: [cartId], references: [id])
  cartId        Int
  books_product BooksProduct @relation(fields: [productId], references: [id])
  productId     Int
  quantity      Int
  createdAt     DateTime    @default(now())
}

model Invoice {
  id          Int         @id @default(autoincrement())
  cart        Cart        @relation(fields: [cartId], references: [id])
  cartId      Int
  customer    Customer    @relation("CustomerToInvoice", fields: [customerId], references: [id])
  customerId  Int
  items       InvoiceItem[]
  totalAmount Float
  status      String      @default("pending")
  issuedAt    DateTime    @default(now())
}

model InvoiceItem {
  id            Int         @id @default(autoincrement())
  invoice       Invoice     @relation(fields: [invoiceId], references: [id])
  invoiceId     Int
  books_product BooksProduct @relation(fields: [productId], references: [id])
  productId     Int
  quantity      Int
  price         Float
}